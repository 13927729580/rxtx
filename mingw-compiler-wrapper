#!/bin/bash
#
# This is a wrapper script for mingw compiler executable
# As the binary name is not equal on all linux syytem, this script
# tries to determinate the correct name and run it
#
# (c) 2012, Alexander Christian <alex@root1.de>
# This file GPL v3 licensed!
#
#

#########################################

# Debian
X32_EXEC[0]="i586-mingw32msvc-gcc"
X64_EXEC[0]="amd64-mingw32msvc-gcc"

# Ubuntu
X32_EXEC[1]="i686-w64-mingw32-gcc"
X64_EXEC[1]="x86_64-w64-mingw32-gcc"

#########################################

## Get some information about the linux system
LSB_RELEASE=`command -v lsb_release`
OS_NAME="<unknown, install 'lsb_release' and try again>";

# get machine hardware type
MACHINE=`uname -m`

# get os name
if [ -f $LSB_RELEASE ]; then
	OS_NAME=`$LSB_RELEASE -d -s`
fi

# Search for executable based on detected hardware (32bit / 64bit)
function findExecutable() {
	if [ $MACHINE = "x86_64" ]; then
		# 64bit
		echo "Checking 64bit executables..."
		for t in "${X64_EXEC[@]}" 
		do
			CMD=`command -v $t`
			echo "   ... $t -> $CMD"
			if [ -f $CMD ]; then
				MINGW_EXECUTABLE=$CMD;
				echo "   -> found!";
				break;
			fi
		done
	else	
		# 32 bit
		echo "Checking 32bit executables..."
		for t in "${X32_EXEC[@]}" 
		do
			CMD=`command -v $t`
			echo "   ... $t -> $CMD"
			if [ -f $CMD ]; then
				MINGW_EXECUTABLE=$CMD;
				echo "   -> found!";
				break;
			fi
		done
	fi
}

echo                                
echo "*********************************************"
echo "MinGW 32/64bit - Compiler Wrapper"
echo "---------------------------------------------"
echo "Detected OS: $OS_NAME $MACHINE"
findExecutable
echo "MinGW compiler executable: $MINGW_EXECUTABLE"
echo "*********************************************"
echo
if [ -z "$MINGW_EXECUTABLE" ]; then
    echo "No mingw executable name for os '$OS_NAME' found."
    echo "Please run 'export MINGW_EXECUTABLE=/my/path/to/mingwexecutable' before build!"
    exit 1;
fi

# run the compiler
$MINGW_EXECUTABLE $*

echo 
echo "*********************************************"